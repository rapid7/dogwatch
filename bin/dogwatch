#!/usr/bin/env ruby
require 'thor'
require 'dogwatch'

module DogWatch
  ##
  # DogWatch CLI
  ##
  class CLI < Thor
    class_option :dogfile, :type => :string, :default => 'Dogfile'
    class_option :api_key, :type => :string, :default => nil
    class_option :app_key, :type => :string, :default => nil
    def initialize(*args)
      super
      @cwd = Dir.getwd
      @dogfile = DogWatch::DogFile.new
    end

    desc 'create', 'Create a monitor from a Dogfile'
    def create
      @dogfile.configure(File.absolute_path(options['dogfile'], @cwd),
                         options['api_key'], options['app_key'])
      @dogfile.create { |c| say_status(*c.to_thor) }
    end

    desc 'delete', 'Delete a monitor from a Dogfile'
    method_option :all, default: false, desc: 'Whether to delete all monitors defined in the Dogfile', type: :boolean
    def delete
      validate_delete_options!

      dogfile.delete { |response| say_status(*response.to_thor) }
    end

    no_commands do
      private

      def dogfile
        @dogfile ||= load_dogfile
      end

      def load_dogfile
        DogWatch::DogFile.new.tap do |dogfile|
          src = File.absolute_path(options['dogfile'], Dir.getwd)
          dogfile.configure(src, options['api_key'], options['app_key'])
        end
      end

      def validate_delete_options!
        return true if options[:all]

        fail ArgumentError, "You must specify --all to delete monitors.\n\nSee command help for more information."
      end
    end
  end
end

DogWatch::CLI.start(ARGV)
